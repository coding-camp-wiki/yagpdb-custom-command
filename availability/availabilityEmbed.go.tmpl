{{ $embedTitle := "Staff In/Out" }}

{{ $fieldValueEmpty := "(none)" }}

{{ $fieldValueAvailable := $fieldValueEmpty }}
{{ $fieldValueAway := $fieldValueEmpty }}

{{ $emojiAvailable := "âœ…" }}
{{ $emojiAway := "ðŸ›‘" }}
{{ $emojiReset := "ðŸ”„" }}

{{ $emojiSet := cslice $emojiAvailable $emojiAway $emojiReset }}

{{ define "embedDict" }}
    {{ $title := .title }}
    {{ $description := "Which staff members are currently available to help?" }}
    {{ $color := 12426513 }}

    {{ $fieldNameAvailable := "Ready to Help!" }}
    {{ $fieldNameAway := "Away" }}
    {{ $fieldInline := true }}

    {{ $fieldAvailable := (sdict "name" $fieldNameAvailable "value" .available "inline" $fieldInline) }}
    {{ $fieldAway := (sdict "name" $fieldNameAway "value" .away "inline" $fieldInline) }}

    {{ $fields := (cslice
            $fieldAvailable
            $fieldAway
        )
    }}

    {{ .Set "result" (sdict
        "title" $title
        "description" $description
        "color" $color
        "fields" $fields
    ) }}
{{ end }}

{{ template "embedDict" ($embedDict := sdict
    "title" $embedTitle
    "available" $fieldValueAvailable
    "away" $fieldValueAway
) }}

{{ $reactMessageId := .ExecData.messageId }}
{{ $reactEmoji := .ExecData.emoji }}
{{ $isReactionAdded := .ExecData.isReactionAdded }}
{{ $reactUserId := .ExecData.userId }}
{{ $reactUser := userArg $reactUserId }}

{{/* initial setup */}}
{{ if not .ExecData }}
    {{ $embed := cembed $embedDict.result }}

    {{ $messageId := sendMessageRetID nil $embed }}

    {{ range $emojiSet }}
        {{ addMessageReactions nil $messageId . }}
    {{ end }}

    {{ deleteTrigger 1 }}

{{/* update existing embed, if present, based on expected emojis */}}
{{ else if and (in $emojiSet $reactEmoji) ($isReactionAdded) }}
    {{ $reactMessage := getMessage nil $reactMessageId }}

    {{ range $index, $embed := $reactMessage.Embeds }}
        {{ if eq $embed.Title $embedTitle }}
            {{ if eq $reactEmoji $emojiAvailable }}
                updating available...
                {{ $fieldValueAvailable = joinStr "\n" $reactUser.Mention }}
            {{ else if eq $reactEmoji $emojiAway }}
                updating away...
                {{ $fieldValueAway = joinStr "\n" $reactUser.Mention }}
            {{ else if eq $reactEmoji $emojiReset }}
                resetting...
                {{ $fieldValueAvailable = $fieldValueEmpty }}
                {{ $fieldValueAway = $fieldValueEmpty }}
            {{ end }}

            {{ template "embedDict" ($embedDict = sdict
                "title" $embedTitle
                "available" $fieldValueAvailable
                "away" $fieldValueAway
            ) }}

            {{ editMessage nil $reactMessageId (complexMessageEdit "embed" $embedDict.result) }}
        {{ end }}
    {{ end }}
{{ end }}

{{ if $isReactionAdded }}
    {{ deleteMessageReaction nil $reactMessageId $reactUserId $reactEmoji }}
{{ end }}
